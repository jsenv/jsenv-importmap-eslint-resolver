{
  "version": 3,
  "file": "main.cjs",
  "sources": [
    "../../src/internal/isNativeNodeModuleBareSpecifier.js",
    "../../src/internal/isNativeBrowserModuleBareSpecifier.js",
    "../../src/resolver.js"
  ],
  "sourcesContent": [
    "const NATIVE_NODE_MODULE_SPECIFIER_ARRAY = [\n  \"assert\",\n  \"async_hooks\",\n  \"buffer_ieee754\",\n  \"buffer\",\n  \"child_process\",\n  \"cluster\",\n  \"console\",\n  \"constants\",\n  \"crypto\",\n  \"_debugger\",\n  \"dgram\",\n  \"dns\",\n  \"domain\",\n  \"events\",\n  \"freelist\",\n  \"fs\",\n  \"fs/promises\",\n  \"_http_agent\",\n  \"_http_client\",\n  \"_http_common\",\n  \"_http_incoming\",\n  \"_http_outgoing\",\n  \"_http_server\",\n  \"http\",\n  \"http2\",\n  \"https\",\n  \"inspector\",\n  \"_linklist\",\n  \"module\",\n  \"net\",\n  \"node-inspect/lib/_inspect\",\n  \"node-inspect/lib/internal/inspect_client\",\n  \"node-inspect/lib/internal/inspect_repl\",\n  \"os\",\n  \"path\",\n  \"perf_hooks\",\n  \"process\",\n  \"punycode\",\n  \"querystring\",\n  \"readline\",\n  \"repl\",\n  \"smalloc\",\n  \"_stream_duplex\",\n  \"_stream_transform\",\n  \"_stream_wrap\",\n  \"_stream_passthrough\",\n  \"_stream_readable\",\n  \"_stream_writable\",\n  \"stream\",\n  \"string_decoder\",\n  \"sys\",\n  \"timers\",\n  \"_tls_common\",\n  \"_tls_legacy\",\n  \"_tls_wrap\",\n  \"tls\",\n  \"trace_events\",\n  \"tty\",\n  \"url\",\n  \"util\",\n  \"v8/tools/arguments\",\n  \"v8/tools/codemap\",\n  \"v8/tools/consarray\",\n  \"v8/tools/csvparser\",\n  \"v8/tools/logreader\",\n  \"v8/tools/profile_view\",\n  \"v8/tools/splaytree\",\n  \"v8\",\n  \"vm\",\n  \"worker_threads\",\n  \"zlib\",\n  // global is special\n  \"global\",\n]\n\nexport const isNativeNodeModuleBareSpecifier = (specifier) =>\n  NATIVE_NODE_MODULE_SPECIFIER_ARRAY.includes(specifier)\n",
    "export const isNativeBrowserModuleBareSpecifier = () => false\n",
    "// https://github.com/benmosher/eslint-plugin-import/blob/master/resolvers/node/index.js\n// https://github.com/benmosher/eslint-plugin-import/tree/master/resolvers\n// https://github.com/olalonde/eslint-import-resolver-babel-root-import\n\nimport { readFileSync, statSync, realpathSync } from \"fs\"\nimport { createLogger } from \"@jsenv/logger\"\nimport { normalizeImportMap, resolveImport } from \"@jsenv/import-map\"\nimport {\n  assertAndNormalizeDirectoryUrl,\n  resolveUrl,\n  ensureWindowsDriveLetter,\n  urlIsInsideOf,\n  urlToFileSystemPath,\n  fileSystemPathToUrl,\n} from \"@jsenv/util\"\nimport { isNativeNodeModuleBareSpecifier } from \"./internal/isNativeNodeModuleBareSpecifier.js\"\nimport { isNativeBrowserModuleBareSpecifier } from \"./internal/isNativeBrowserModuleBareSpecifier.js\"\n\nconst applyUrlResolution = (specifier, importer) => {\n  const url = resolveUrl(specifier, importer)\n  return ensureWindowsDriveLetter(url, importer)\n}\n\nexport const interfaceVersion = 2\n\nexport const resolve = (\n  source,\n  file,\n  {\n    logLevel,\n    projectDirectoryUrl,\n    importMapFileRelativeUrl = \"./import-map.importmap\",\n    caseSensitive = true,\n    ignoreOutside = false,\n    defaultExtension = false,\n    node = false,\n    browser = false,\n  },\n) => {\n  projectDirectoryUrl = assertAndNormalizeDirectoryUrl(projectDirectoryUrl)\n\n  let importMap\n  if (typeof importMapFileRelativeUrl === \"undefined\") {\n    importMap = undefined\n  } else if (typeof importMapFileRelativeUrl === \"string\") {\n    const importMapFileUrl = applyUrlResolution(importMapFileRelativeUrl, projectDirectoryUrl)\n\n    if (ignoreOutside && !urlIsInsideOf(importMapFileUrl, projectDirectoryUrl)) {\n      logger.warn(`import map file is outside project.\n--- import map file ---\n${urlToFileSystemPath(importMapFileUrl)}\n--- project directory ---\n${urlToFileSystemPath(projectDirectoryUrl)}`)\n    }\n\n    try {\n      const importMapFilePath = urlToFileSystemPath(importMapFileUrl)\n      const importMapFileBuffer = readFileSync(importMapFilePath)\n      const importMapFileString = String(importMapFileBuffer)\n      importMap = JSON.parse(importMapFileString)\n      importMap = normalizeImportMap(importMap, projectDirectoryUrl)\n    } catch (e) {\n      if (e && e.code === \"ENOENT\") {\n        importMap = {}\n      } else {\n        throw e\n      }\n    }\n  } else {\n    throw new TypeError(\n      `importMapFileRelativeUrl must be a string, got ${importMapFileRelativeUrl}`,\n    )\n  }\n\n  const logger = createLogger({ logLevel })\n\n  logger.debug(`\nresolve import for project.\n--- specifier ---\n${source}\n--- importer ---\n${file}\n--- project directory path ---\n${urlToFileSystemPath(projectDirectoryUrl)}`)\n\n  if (node && isNativeNodeModuleBareSpecifier(source)) {\n    logger.debug(`-> native node module`)\n    return {\n      found: true,\n      path: null,\n    }\n  }\n\n  if (browser && isNativeBrowserModuleBareSpecifier(source)) {\n    logger.debug(`-> native browser module`)\n    return {\n      found: true,\n      path: null,\n    }\n  }\n\n  const specifier = source\n  const importer = String(fileSystemPathToUrl(file))\n\n  try {\n    let importUrl\n    try {\n      importUrl = resolveImport({\n        specifier,\n        importer,\n        importMap,\n        defaultExtension,\n      })\n    } catch (e) {\n      if (e.message.includes(\"bare specifier\")) {\n        // this is an expected error and the file cannot be found\n        logger.debug(\"unmapped bare specifier\")\n        return {\n          found: false,\n          path: null,\n        }\n      }\n      // this is an unexpected error\n      throw e\n    }\n    importUrl = ensureWindowsDriveLetter(importUrl, importer)\n\n    if (importUrl.startsWith(\"file://\")) {\n      const importFilePath = urlToFileSystemPath(importUrl)\n\n      if (ignoreOutside && !urlIsInsideOf(importUrl, projectDirectoryUrl)) {\n        logger.warn(`ignoring import outside project\n--- import file ---\n${importFilePath}\n--- project directory ---\n${urlToFileSystemPath(projectDirectoryUrl)}\n`)\n        return {\n          found: false,\n          path: importFilePath,\n        }\n      }\n\n      if (pathLeadsToFile(importFilePath)) {\n        if (caseSensitive) {\n          const importFileRealPath = realpathSync.native(importFilePath)\n          if (importFileRealPath !== importFilePath) {\n            logger.warn(\n              `WARNING: file found at ${importFilePath} but would not be found on a case sensitive filesystem.\nThe real file path is ${importFileRealPath}.\nYou can choose to disable this warning by disabling case sensitivity.\nIf you do so keep in mind windows users would not find that file.`,\n            )\n            return {\n              found: false,\n              path: importFilePath,\n            }\n          }\n        }\n\n        logger.debug(`-> found file at ${importUrl}`)\n        return {\n          found: true,\n          path: importFilePath,\n        }\n      }\n\n      logger.debug(`-> file not found at ${importUrl}`)\n      return {\n        found: false,\n        path: importFilePath,\n      }\n    }\n\n    if (importUrl.startsWith(\"https://\") || importUrl.startsWith(\"http://\")) {\n      // this api is synchronous we cannot check\n      // if a remote http/https file is available\n      logger.debug(`-> consider found because of http(s) scheme ${importUrl}`)\n\n      return {\n        found: true,\n        path: null,\n      }\n    }\n\n    logger.debug(`-> consider not found because of scheme ${importUrl}`)\n    return {\n      found: false,\n      path: null,\n    }\n  } catch (e) {\n    logger.error(e.stack)\n    return {\n      found: false,\n      path: null,\n    }\n  }\n}\n\nconst pathLeadsToFile = (path) => {\n  try {\n    const stats = statSync(path)\n    return stats.isFile()\n  } catch (e) {\n    if (e && e.code === \"ENOENT\") {\n      return false\n    }\n    throw e\n  }\n}\n"
  ],
  "names": [
    "NATIVE_NODE_MODULE_SPECIFIER_ARRAY",
    "isNativeNodeModuleBareSpecifier",
    "specifier",
    "includes",
    "isNativeBrowserModuleBareSpecifier",
    "applyUrlResolution",
    "importer",
    "url",
    "resolveUrl",
    "ensureWindowsDriveLetter",
    "interfaceVersion",
    "resolve",
    "source",
    "file",
    "logLevel",
    "projectDirectoryUrl",
    "importMapFileRelativeUrl",
    "caseSensitive",
    "ignoreOutside",
    "defaultExtension",
    "node",
    "browser",
    "assertAndNormalizeDirectoryUrl",
    "importMap",
    "undefined",
    "importMapFileUrl",
    "urlIsInsideOf",
    "logger",
    "warn",
    "urlToFileSystemPath",
    "importMapFilePath",
    "importMapFileBuffer",
    "readFileSync",
    "importMapFileString",
    "String",
    "JSON",
    "parse",
    "normalizeImportMap",
    "e",
    "code",
    "TypeError",
    "createLogger",
    "debug",
    "found",
    "path",
    "fileSystemPathToUrl",
    "importUrl",
    "resolveImport",
    "message",
    "startsWith",
    "importFilePath",
    "pathLeadsToFile",
    "importFileRealPath",
    "realpathSync",
    "native",
    "error",
    "stack",
    "stats",
    "statSync",
    "isFile"
  ],
  "mappings": "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"
}